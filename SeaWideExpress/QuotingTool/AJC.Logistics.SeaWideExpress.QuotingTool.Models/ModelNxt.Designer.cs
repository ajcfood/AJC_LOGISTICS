//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_Fees_Parent_FK", "QuotingV2_Fees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Fees), "QuotingV2_Fees1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Fees), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_Fees_RangeUom_FK", "QuotingV2_UOMs", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.UOM), "QuotingV2_Fees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Fees), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_Fees_Types_FK", "QuotingV2_FeeTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.FeeType), "QuotingV2_Fees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Fees), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_Fees_Uom_FK", "QuotingV2_UOMs", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.UOM), "QuotingV2_Fees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Fees), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_FeeTypes_Parent_FK", "QuotingV2_FeeTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.FeeType), "QuotingV2_FeeTypes1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.FeeType), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_ServiceTypeCharges_FeeType_FK", "QuotingV2_FeeTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.FeeType), "QuotingV2_ServiceTypeFees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.ServiceTypeFee), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_ServiceTypeCharges_ServiceType_FK", "QuotingV2_ServiceTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.ServiceType), "QuotingV2_ServiceTypeFees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.ServiceTypeFee), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_Cities_State_FK", "QuotingV2_States", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.State), "QuotingV2_Cities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.City), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_Fees_City_FK", "QuotingV2_Cities", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.City), "Fees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Fees), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_Zones_City_FK", "QuotingV2_Cities", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.City), "QuotingV2_Zones", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Zone), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_Fees_Country_FK", "QuotingV2_Countries", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Country), "Fees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Fees), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_States_Country_FK", "QuotingV2_Countries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Country), "QuotingV2_States", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.State), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_ZipCodes_Country_FK", "QuotingV2_Countries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Country), "QuotingV2_ZipCodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.ZipCodes), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_Fees_Island_FK", "QuotingV2_Islands", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Island), "Fees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Fees), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_Fees_State_FK", "QuotingV2_States", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.State), "Fees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Fees), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_Zones_Island_FK", "QuotingV2_Islands", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Island), "QuotingV2_Zones", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Zone), true)]
[assembly: EdmRelationshipAttribute("QuotingToolModel", "QuotingV2_Zones_State_FK", "QuotingV2_States", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.State), "QuotingV2_Zones", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AJC.Logistics.SeaWideExpress.QuotingTool.Models.Zone), true)]

#endregion

namespace AJC.Logistics.SeaWideExpress.QuotingTool.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class QuotingToolRepository : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new QuotingToolRepository object using the connection string found in the 'QuotingToolRepository' section of the application configuration file.
        /// </summary>
        public QuotingToolRepository() : base("name=QuotingToolRepository", "QuotingToolRepository")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new QuotingToolRepository object.
        /// </summary>
        public QuotingToolRepository(string connectionString) : base(connectionString, "QuotingToolRepository")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new QuotingToolRepository object.
        /// </summary>
        public QuotingToolRepository(EntityConnection connection) : base(connection, "QuotingToolRepository")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Test> Test
        {
            get
            {
                if ((_Test == null))
                {
                    _Test = base.CreateObjectSet<Test>("Test");
                }
                return _Test;
            }
        }
        private ObjectSet<Test> _Test;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Fees> Fees
        {
            get
            {
                if ((_Fees == null))
                {
                    _Fees = base.CreateObjectSet<Fees>("Fees");
                }
                return _Fees;
            }
        }
        private ObjectSet<Fees> _Fees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeeType> FeeTypes
        {
            get
            {
                if ((_FeeTypes == null))
                {
                    _FeeTypes = base.CreateObjectSet<FeeType>("FeeTypes");
                }
                return _FeeTypes;
            }
        }
        private ObjectSet<FeeType> _FeeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceTypeFee> ServiceTypeFees
        {
            get
            {
                if ((_ServiceTypeFees == null))
                {
                    _ServiceTypeFees = base.CreateObjectSet<ServiceTypeFee>("ServiceTypeFees");
                }
                return _ServiceTypeFees;
            }
        }
        private ObjectSet<ServiceTypeFee> _ServiceTypeFees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceType> ServiceTypes
        {
            get
            {
                if ((_ServiceTypes == null))
                {
                    _ServiceTypes = base.CreateObjectSet<ServiceType>("ServiceTypes");
                }
                return _ServiceTypes;
            }
        }
        private ObjectSet<ServiceType> _ServiceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UOM> UOMs
        {
            get
            {
                if ((_UOMs == null))
                {
                    _UOMs = base.CreateObjectSet<UOM>("UOMs");
                }
                return _UOMs;
            }
        }
        private ObjectSet<UOM> _UOMs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<C__RefactorLog> C__RefactorLog
        {
            get
            {
                if ((_C__RefactorLog == null))
                {
                    _C__RefactorLog = base.CreateObjectSet<C__RefactorLog>("C__RefactorLog");
                }
                return _C__RefactorLog;
            }
        }
        private ObjectSet<C__RefactorLog> _C__RefactorLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Island> Islands
        {
            get
            {
                if ((_Islands == null))
                {
                    _Islands = base.CreateObjectSet<Island>("Islands");
                }
                return _Islands;
            }
        }
        private ObjectSet<Island> _Islands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ZipCodes> ZipCodes
        {
            get
            {
                if ((_ZipCodes == null))
                {
                    _ZipCodes = base.CreateObjectSet<ZipCodes>("ZipCodes");
                }
                return _ZipCodes;
            }
        }
        private ObjectSet<ZipCodes> _ZipCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Zone> Zones
        {
            get
            {
                if ((_Zones == null))
                {
                    _Zones = base.CreateObjectSet<Zone>("Zones");
                }
                return _Zones;
            }
        }
        private ObjectSet<Zone> _Zones;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Test EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTest(Test test)
        {
            base.AddObject("Test", test);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Fees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFees(Fees fees)
        {
            base.AddObject("Fees", fees);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeeTypes(FeeType feeType)
        {
            base.AddObject("FeeTypes", feeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceTypeFees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceTypeFees(ServiceTypeFee serviceTypeFee)
        {
            base.AddObject("ServiceTypeFees", serviceTypeFee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceTypes(ServiceType serviceType)
        {
            base.AddObject("ServiceTypes", serviceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UOMs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUOMs(UOM uOM)
        {
            base.AddObject("UOMs", uOM);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the C__RefactorLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToC__RefactorLog(C__RefactorLog c__RefactorLog)
        {
            base.AddObject("C__RefactorLog", c__RefactorLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Islands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIslands(Island island)
        {
            base.AddObject("Islands", island);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ZipCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZipCodes(ZipCodes zipCodes)
        {
            base.AddObject("ZipCodes", zipCodes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Zones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZones(Zone zone)
        {
            base.AddObject("Zones", zone);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuotingToolModel", Name="C__RefactorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class C__RefactorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new C__RefactorLog object.
        /// </summary>
        /// <param name="operationKey">Initial value of the OperationKey property.</param>
        public static C__RefactorLog CreateC__RefactorLog(global::System.Guid operationKey)
        {
            C__RefactorLog c__RefactorLog = new C__RefactorLog();
            c__RefactorLog.OperationKey = operationKey;
            return c__RefactorLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OperationKey
        {
            get
            {
                return _OperationKey;
            }
            set
            {
                if (_OperationKey != value)
                {
                    OnOperationKeyChanging(value);
                    ReportPropertyChanging("OperationKey");
                    _OperationKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OperationKey");
                    OnOperationKeyChanged();
                }
            }
        }
        private global::System.Guid _OperationKey;
        partial void OnOperationKeyChanging(global::System.Guid value);
        partial void OnOperationKeyChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuotingToolModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="cityID">Initial value of the CityID property.</param>
        /// <param name="stateID">Initial value of the StateID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        public static City CreateCity(global::System.Int32 cityID, global::System.Int32 stateID, global::System.String name, global::System.DateTime dateAdded, global::System.String addedBy)
        {
            City city = new City();
            city.CityID = cityID;
            city.StateID = stateID;
            city.Name = name;
            city.DateAdded = dateAdded;
            city.AddedBy = addedBy;
            return city;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Cities_State_FK", "QuotingV2_States")]
        public State QuotingV2_States
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("QuotingToolModel.QuotingV2_Cities_State_FK", "QuotingV2_States").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("QuotingToolModel.QuotingV2_Cities_State_FK", "QuotingV2_States").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> QuotingV2_StatesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("QuotingToolModel.QuotingV2_Cities_State_FK", "QuotingV2_States");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("QuotingToolModel.QuotingV2_Cities_State_FK", "QuotingV2_States", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_City_FK", "Fees")]
        public EntityCollection<Fees> QuotingV2_Fees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_City_FK", "Fees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_City_FK", "Fees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Zones_City_FK", "QuotingV2_Zones")]
        public EntityCollection<Zone> QuotingV2_Zones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Zone>("QuotingToolModel.QuotingV2_Zones_City_FK", "QuotingV2_Zones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Zone>("QuotingToolModel.QuotingV2_Zones_City_FK", "QuotingV2_Zones", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuotingToolModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="shortCode">Initial value of the ShortCode property.</param>
        /// <param name="longCode">Initial value of the LongCode property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        public static Country CreateCountry(global::System.Int32 countryID, global::System.String shortCode, global::System.String longCode, global::System.String name, global::System.DateTime dateAdded, global::System.String addedBy)
        {
            Country country = new Country();
            country.CountryID = countryID;
            country.ShortCode = shortCode;
            country.LongCode = longCode;
            country.Name = name;
            country.DateAdded = dateAdded;
            country.AddedBy = addedBy;
            return country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortCode
        {
            get
            {
                return _ShortCode;
            }
            set
            {
                OnShortCodeChanging(value);
                ReportPropertyChanging("ShortCode");
                _ShortCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortCode");
                OnShortCodeChanged();
            }
        }
        private global::System.String _ShortCode;
        partial void OnShortCodeChanging(global::System.String value);
        partial void OnShortCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LongCode
        {
            get
            {
                return _LongCode;
            }
            set
            {
                OnLongCodeChanging(value);
                ReportPropertyChanging("LongCode");
                _LongCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LongCode");
                OnLongCodeChanged();
            }
        }
        private global::System.String _LongCode;
        partial void OnLongCodeChanging(global::System.String value);
        partial void OnLongCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_Country_FK", "Fees")]
        public EntityCollection<Fees> QuotingV2_Fees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_Country_FK", "Fees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_Country_FK", "Fees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_States_Country_FK", "QuotingV2_States")]
        public EntityCollection<State> QuotingV2_States
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<State>("QuotingToolModel.QuotingV2_States_Country_FK", "QuotingV2_States");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<State>("QuotingToolModel.QuotingV2_States_Country_FK", "QuotingV2_States", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_ZipCodes_Country_FK", "QuotingV2_ZipCodes")]
        public EntityCollection<ZipCodes> QuotingV2_ZipCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ZipCodes>("QuotingToolModel.QuotingV2_ZipCodes_Country_FK", "QuotingV2_ZipCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ZipCodes>("QuotingToolModel.QuotingV2_ZipCodes_Country_FK", "QuotingV2_ZipCodes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuotingToolModel", Name="Fees")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fees : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Fees object.
        /// </summary>
        /// <param name="feeID">Initial value of the FeeID property.</param>
        /// <param name="feeTypeID">Initial value of the FeeTypeID property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        public static Fees CreateFees(global::System.Int32 feeID, global::System.Int32 feeTypeID, global::System.DateTime dateAdded, global::System.String addedBy)
        {
            Fees fees = new Fees();
            fees.FeeID = feeID;
            fees.FeeTypeID = feeTypeID;
            fees.DateAdded = dateAdded;
            fees.AddedBy = addedBy;
            return fees;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeeID
        {
            get
            {
                return _FeeID;
            }
            set
            {
                if (_FeeID != value)
                {
                    OnFeeIDChanging(value);
                    ReportPropertyChanging("FeeID");
                    _FeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FeeID");
                    OnFeeIDChanged();
                }
            }
        }
        private global::System.Int32 _FeeID;
        partial void OnFeeIDChanging(global::System.Int32 value);
        partial void OnFeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeeTypeID
        {
            get
            {
                return _FeeTypeID;
            }
            set
            {
                OnFeeTypeIDChanging(value);
                ReportPropertyChanging("FeeTypeID");
                _FeeTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeeTypeID");
                OnFeeTypeIDChanged();
            }
        }
        private global::System.Int32 _FeeTypeID;
        partial void OnFeeTypeIDChanging(global::System.Int32 value);
        partial void OnFeeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IslandID
        {
            get
            {
                return _IslandID;
            }
            set
            {
                OnIslandIDChanging(value);
                ReportPropertyChanging("IslandID");
                _IslandID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IslandID");
                OnIslandIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IslandID;
        partial void OnIslandIDChanging(Nullable<global::System.Int32> value);
        partial void OnIslandIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ZoneID
        {
            get
            {
                return _ZoneID;
            }
            set
            {
                OnZoneIDChanging(value);
                ReportPropertyChanging("ZoneID");
                _ZoneID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneID");
                OnZoneIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ZoneID;
        partial void OnZoneIDChanging(Nullable<global::System.Int32> value);
        partial void OnZoneIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCodes
        {
            get
            {
                return _ZipCodes;
            }
            set
            {
                OnZipCodesChanging(value);
                ReportPropertyChanging("ZipCodes");
                _ZipCodes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCodes");
                OnZipCodesChanged();
            }
        }
        private global::System.String _ZipCodes;
        partial void OnZipCodesChanging(global::System.String value);
        partial void OnZipCodesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ByUomID
        {
            get
            {
                return _ByUomID;
            }
            set
            {
                OnByUomIDChanging(value);
                ReportPropertyChanging("ByUomID");
                _ByUomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ByUomID");
                OnByUomIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ByUomID;
        partial void OnByUomIDChanging(Nullable<global::System.Int32> value);
        partial void OnByUomIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FeeMin
        {
            get
            {
                return _FeeMin;
            }
            set
            {
                OnFeeMinChanging(value);
                ReportPropertyChanging("FeeMin");
                _FeeMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeeMin");
                OnFeeMinChanged();
            }
        }
        private Nullable<global::System.Decimal> _FeeMin;
        partial void OnFeeMinChanging(Nullable<global::System.Decimal> value);
        partial void OnFeeMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FeeMax
        {
            get
            {
                return _FeeMax;
            }
            set
            {
                OnFeeMaxChanging(value);
                ReportPropertyChanging("FeeMax");
                _FeeMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeeMax");
                OnFeeMaxChanged();
            }
        }
        private Nullable<global::System.Decimal> _FeeMax;
        partial void OnFeeMaxChanging(Nullable<global::System.Decimal> value);
        partial void OnFeeMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RangeByUomID
        {
            get
            {
                return _RangeByUomID;
            }
            set
            {
                OnRangeByUomIDChanging(value);
                ReportPropertyChanging("RangeByUomID");
                _RangeByUomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RangeByUomID");
                OnRangeByUomIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RangeByUomID;
        partial void OnRangeByUomIDChanging(Nullable<global::System.Int32> value);
        partial void OnRangeByUomIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentFeeID
        {
            get
            {
                return _ParentFeeID;
            }
            set
            {
                OnParentFeeIDChanging(value);
                ReportPropertyChanging("ParentFeeID");
                _ParentFeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentFeeID");
                OnParentFeeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentFeeID;
        partial void OnParentFeeIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentFeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RangeFrom
        {
            get
            {
                return _RangeFrom;
            }
            set
            {
                OnRangeFromChanging(value);
                ReportPropertyChanging("RangeFrom");
                _RangeFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RangeFrom");
                OnRangeFromChanged();
            }
        }
        private Nullable<global::System.Decimal> _RangeFrom;
        partial void OnRangeFromChanging(Nullable<global::System.Decimal> value);
        partial void OnRangeFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RangeTo
        {
            get
            {
                return _RangeTo;
            }
            set
            {
                OnRangeToChanging(value);
                ReportPropertyChanging("RangeTo");
                _RangeTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RangeTo");
                OnRangeToChanged();
            }
        }
        private Nullable<global::System.Decimal> _RangeTo;
        partial void OnRangeToChanging(Nullable<global::System.Decimal> value);
        partial void OnRangeToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ValidFrom
        {
            get
            {
                return _ValidFrom;
            }
            set
            {
                OnValidFromChanging(value);
                ReportPropertyChanging("ValidFrom");
                _ValidFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidFrom");
                OnValidFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _ValidFrom;
        partial void OnValidFromChanging(Nullable<global::System.DateTime> value);
        partial void OnValidFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ValidUntil
        {
            get
            {
                return _ValidUntil;
            }
            set
            {
                OnValidUntilChanging(value);
                ReportPropertyChanging("ValidUntil");
                _ValidUntil = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidUntil");
                OnValidUntilChanged();
            }
        }
        private Nullable<global::System.DateTime> _ValidUntil;
        partial void OnValidUntilChanging(Nullable<global::System.DateTime> value);
        partial void OnValidUntilChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateID;
        partial void OnStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _Value;
        partial void OnValueChanging(Nullable<global::System.Decimal> value);
        partial void OnValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_Parent_FK", "QuotingV2_Fees1")]
        public EntityCollection<Fees> QuotingV2_Fees1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_Parent_FK", "QuotingV2_Fees1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_Parent_FK", "QuotingV2_Fees1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_Parent_FK", "QuotingV2_Fees")]
        public Fees QuotingV2_Fees2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fees>("QuotingToolModel.QuotingV2_Fees_Parent_FK", "QuotingV2_Fees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fees>("QuotingToolModel.QuotingV2_Fees_Parent_FK", "QuotingV2_Fees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fees> QuotingV2_Fees2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fees>("QuotingToolModel.QuotingV2_Fees_Parent_FK", "QuotingV2_Fees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fees>("QuotingToolModel.QuotingV2_Fees_Parent_FK", "QuotingV2_Fees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_RangeUom_FK", "QuotingV2_UOMs")]
        public UOM QuotingV2_UOMs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UOM>("QuotingToolModel.QuotingV2_Fees_RangeUom_FK", "QuotingV2_UOMs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UOM>("QuotingToolModel.QuotingV2_Fees_RangeUom_FK", "QuotingV2_UOMs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UOM> QuotingV2_UOMsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UOM>("QuotingToolModel.QuotingV2_Fees_RangeUom_FK", "QuotingV2_UOMs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UOM>("QuotingToolModel.QuotingV2_Fees_RangeUom_FK", "QuotingV2_UOMs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_Types_FK", "QuotingV2_FeeTypes")]
        public FeeType QuotingV2_FeeTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeeType>("QuotingToolModel.QuotingV2_Fees_Types_FK", "QuotingV2_FeeTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeeType>("QuotingToolModel.QuotingV2_Fees_Types_FK", "QuotingV2_FeeTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeeType> QuotingV2_FeeTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeeType>("QuotingToolModel.QuotingV2_Fees_Types_FK", "QuotingV2_FeeTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeeType>("QuotingToolModel.QuotingV2_Fees_Types_FK", "QuotingV2_FeeTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_Uom_FK", "QuotingV2_UOMs")]
        public UOM QuotingV2_UOMs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UOM>("QuotingToolModel.QuotingV2_Fees_Uom_FK", "QuotingV2_UOMs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UOM>("QuotingToolModel.QuotingV2_Fees_Uom_FK", "QuotingV2_UOMs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UOM> QuotingV2_UOMs1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UOM>("QuotingToolModel.QuotingV2_Fees_Uom_FK", "QuotingV2_UOMs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UOM>("QuotingToolModel.QuotingV2_Fees_Uom_FK", "QuotingV2_UOMs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_City_FK", "QuotingV2_Cities")]
        public City QuotingV2_Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("QuotingToolModel.QuotingV2_Fees_City_FK", "QuotingV2_Cities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("QuotingToolModel.QuotingV2_Fees_City_FK", "QuotingV2_Cities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> QuotingV2_CitiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("QuotingToolModel.QuotingV2_Fees_City_FK", "QuotingV2_Cities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("QuotingToolModel.QuotingV2_Fees_City_FK", "QuotingV2_Cities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_Country_FK", "QuotingV2_Countries")]
        public Country QuotingV2_Countries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("QuotingToolModel.QuotingV2_Fees_Country_FK", "QuotingV2_Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("QuotingToolModel.QuotingV2_Fees_Country_FK", "QuotingV2_Countries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> QuotingV2_CountriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("QuotingToolModel.QuotingV2_Fees_Country_FK", "QuotingV2_Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("QuotingToolModel.QuotingV2_Fees_Country_FK", "QuotingV2_Countries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_Island_FK", "QuotingV2_Islands")]
        public Island QuotingV2_Islands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Island>("QuotingToolModel.QuotingV2_Fees_Island_FK", "QuotingV2_Islands").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Island>("QuotingToolModel.QuotingV2_Fees_Island_FK", "QuotingV2_Islands").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Island> QuotingV2_IslandsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Island>("QuotingToolModel.QuotingV2_Fees_Island_FK", "QuotingV2_Islands");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Island>("QuotingToolModel.QuotingV2_Fees_Island_FK", "QuotingV2_Islands", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_State_FK", "QuotingV2_States")]
        public State QuotingV2_States
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("QuotingToolModel.QuotingV2_Fees_State_FK", "QuotingV2_States").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("QuotingToolModel.QuotingV2_Fees_State_FK", "QuotingV2_States").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> QuotingV2_StatesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("QuotingToolModel.QuotingV2_Fees_State_FK", "QuotingV2_States");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("QuotingToolModel.QuotingV2_Fees_State_FK", "QuotingV2_States", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuotingToolModel", Name="FeeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeeType object.
        /// </summary>
        /// <param name="feeTypeID">Initial value of the FeeTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        public static FeeType CreateFeeType(global::System.Int32 feeTypeID, global::System.String name, global::System.DateTime dateAdded, global::System.String addedBy)
        {
            FeeType feeType = new FeeType();
            feeType.FeeTypeID = feeTypeID;
            feeType.Name = name;
            feeType.DateAdded = dateAdded;
            feeType.AddedBy = addedBy;
            return feeType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeeTypeID
        {
            get
            {
                return _FeeTypeID;
            }
            set
            {
                if (_FeeTypeID != value)
                {
                    OnFeeTypeIDChanging(value);
                    ReportPropertyChanging("FeeTypeID");
                    _FeeTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FeeTypeID");
                    OnFeeTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FeeTypeID;
        partial void OnFeeTypeIDChanging(global::System.Int32 value);
        partial void OnFeeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentFeeTypeID
        {
            get
            {
                return _ParentFeeTypeID;
            }
            set
            {
                OnParentFeeTypeIDChanging(value);
                ReportPropertyChanging("ParentFeeTypeID");
                _ParentFeeTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentFeeTypeID");
                OnParentFeeTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentFeeTypeID;
        partial void OnParentFeeTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentFeeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_Types_FK", "QuotingV2_Fees")]
        public EntityCollection<Fees> QuotingV2_Fees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_Types_FK", "QuotingV2_Fees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_Types_FK", "QuotingV2_Fees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_FeeTypes_Parent_FK", "QuotingV2_FeeTypes1")]
        public EntityCollection<FeeType> QuotingV2_FeeTypes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeeType>("QuotingToolModel.QuotingV2_FeeTypes_Parent_FK", "QuotingV2_FeeTypes1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeeType>("QuotingToolModel.QuotingV2_FeeTypes_Parent_FK", "QuotingV2_FeeTypes1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_FeeTypes_Parent_FK", "QuotingV2_FeeTypes")]
        public FeeType QuotingV2_FeeTypes2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeeType>("QuotingToolModel.QuotingV2_FeeTypes_Parent_FK", "QuotingV2_FeeTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeeType>("QuotingToolModel.QuotingV2_FeeTypes_Parent_FK", "QuotingV2_FeeTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeeType> QuotingV2_FeeTypes2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeeType>("QuotingToolModel.QuotingV2_FeeTypes_Parent_FK", "QuotingV2_FeeTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeeType>("QuotingToolModel.QuotingV2_FeeTypes_Parent_FK", "QuotingV2_FeeTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_ServiceTypeCharges_FeeType_FK", "QuotingV2_ServiceTypeFees")]
        public EntityCollection<ServiceTypeFee> QuotingV2_ServiceTypeFees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceTypeFee>("QuotingToolModel.QuotingV2_ServiceTypeCharges_FeeType_FK", "QuotingV2_ServiceTypeFees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceTypeFee>("QuotingToolModel.QuotingV2_ServiceTypeCharges_FeeType_FK", "QuotingV2_ServiceTypeFees", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuotingToolModel", Name="Island")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Island : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Island object.
        /// </summary>
        /// <param name="islandID">Initial value of the IslandID property.</param>
        /// <param name="stateID">Initial value of the StateID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        public static Island CreateIsland(global::System.Int32 islandID, global::System.String stateID, global::System.String name, global::System.DateTime dateAdded, global::System.String addedBy)
        {
            Island island = new Island();
            island.IslandID = islandID;
            island.StateID = stateID;
            island.Name = name;
            island.DateAdded = dateAdded;
            island.AddedBy = addedBy;
            return island;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IslandID
        {
            get
            {
                return _IslandID;
            }
            set
            {
                if (_IslandID != value)
                {
                    OnIslandIDChanging(value);
                    ReportPropertyChanging("IslandID");
                    _IslandID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IslandID");
                    OnIslandIDChanged();
                }
            }
        }
        private global::System.Int32 _IslandID;
        partial void OnIslandIDChanging(global::System.Int32 value);
        partial void OnIslandIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private global::System.String _StateID;
        partial void OnStateIDChanging(global::System.String value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_Island_FK", "Fees")]
        public EntityCollection<Fees> QuotingV2_Fees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_Island_FK", "Fees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_Island_FK", "Fees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Zones_Island_FK", "QuotingV2_Zones")]
        public EntityCollection<Zone> QuotingV2_Zones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Zone>("QuotingToolModel.QuotingV2_Zones_Island_FK", "QuotingV2_Zones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Zone>("QuotingToolModel.QuotingV2_Zones_Island_FK", "QuotingV2_Zones", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuotingToolModel", Name="ServiceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceType object.
        /// </summary>
        /// <param name="serviceTypeID">Initial value of the ServiceTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="show">Initial value of the Show property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        public static ServiceType CreateServiceType(global::System.Int32 serviceTypeID, global::System.String name, global::System.String show, global::System.DateTime dateAdded, global::System.String addedBy)
        {
            ServiceType serviceType = new ServiceType();
            serviceType.ServiceTypeID = serviceTypeID;
            serviceType.Name = name;
            serviceType.Show = show;
            serviceType.DateAdded = dateAdded;
            serviceType.AddedBy = addedBy;
            return serviceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceTypeID
        {
            get
            {
                return _ServiceTypeID;
            }
            set
            {
                if (_ServiceTypeID != value)
                {
                    OnServiceTypeIDChanging(value);
                    ReportPropertyChanging("ServiceTypeID");
                    _ServiceTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceTypeID");
                    OnServiceTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ServiceTypeID;
        partial void OnServiceTypeIDChanging(global::System.Int32 value);
        partial void OnServiceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Show
        {
            get
            {
                return _Show;
            }
            set
            {
                OnShowChanging(value);
                ReportPropertyChanging("Show");
                _Show = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Show");
                OnShowChanged();
            }
        }
        private global::System.String _Show;
        partial void OnShowChanging(global::System.String value);
        partial void OnShowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private Nullable<global::System.Int32> _Position;
        partial void OnPositionChanging(Nullable<global::System.Int32> value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_ServiceTypeCharges_ServiceType_FK", "QuotingV2_ServiceTypeFees")]
        public EntityCollection<ServiceTypeFee> QuotingV2_ServiceTypeFees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceTypeFee>("QuotingToolModel.QuotingV2_ServiceTypeCharges_ServiceType_FK", "QuotingV2_ServiceTypeFees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceTypeFee>("QuotingToolModel.QuotingV2_ServiceTypeCharges_ServiceType_FK", "QuotingV2_ServiceTypeFees", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuotingToolModel", Name="ServiceTypeFee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceTypeFee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceTypeFee object.
        /// </summary>
        /// <param name="serviceTypeChargeID">Initial value of the ServiceTypeChargeID property.</param>
        /// <param name="serviceTypeID">Initial value of the ServiceTypeID property.</param>
        /// <param name="feeTypeID">Initial value of the FeeTypeID property.</param>
        public static ServiceTypeFee CreateServiceTypeFee(global::System.Int32 serviceTypeChargeID, global::System.Int32 serviceTypeID, global::System.Int32 feeTypeID)
        {
            ServiceTypeFee serviceTypeFee = new ServiceTypeFee();
            serviceTypeFee.ServiceTypeChargeID = serviceTypeChargeID;
            serviceTypeFee.ServiceTypeID = serviceTypeID;
            serviceTypeFee.FeeTypeID = feeTypeID;
            return serviceTypeFee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceTypeChargeID
        {
            get
            {
                return _ServiceTypeChargeID;
            }
            set
            {
                if (_ServiceTypeChargeID != value)
                {
                    OnServiceTypeChargeIDChanging(value);
                    ReportPropertyChanging("ServiceTypeChargeID");
                    _ServiceTypeChargeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceTypeChargeID");
                    OnServiceTypeChargeIDChanged();
                }
            }
        }
        private global::System.Int32 _ServiceTypeChargeID;
        partial void OnServiceTypeChargeIDChanging(global::System.Int32 value);
        partial void OnServiceTypeChargeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceTypeID
        {
            get
            {
                return _ServiceTypeID;
            }
            set
            {
                OnServiceTypeIDChanging(value);
                ReportPropertyChanging("ServiceTypeID");
                _ServiceTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceTypeID");
                OnServiceTypeIDChanged();
            }
        }
        private global::System.Int32 _ServiceTypeID;
        partial void OnServiceTypeIDChanging(global::System.Int32 value);
        partial void OnServiceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeeTypeID
        {
            get
            {
                return _FeeTypeID;
            }
            set
            {
                OnFeeTypeIDChanging(value);
                ReportPropertyChanging("FeeTypeID");
                _FeeTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeeTypeID");
                OnFeeTypeIDChanged();
            }
        }
        private global::System.Int32 _FeeTypeID;
        partial void OnFeeTypeIDChanging(global::System.Int32 value);
        partial void OnFeeTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_ServiceTypeCharges_FeeType_FK", "QuotingV2_FeeTypes")]
        public FeeType QuotingV2_FeeTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeeType>("QuotingToolModel.QuotingV2_ServiceTypeCharges_FeeType_FK", "QuotingV2_FeeTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeeType>("QuotingToolModel.QuotingV2_ServiceTypeCharges_FeeType_FK", "QuotingV2_FeeTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeeType> QuotingV2_FeeTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeeType>("QuotingToolModel.QuotingV2_ServiceTypeCharges_FeeType_FK", "QuotingV2_FeeTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeeType>("QuotingToolModel.QuotingV2_ServiceTypeCharges_FeeType_FK", "QuotingV2_FeeTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_ServiceTypeCharges_ServiceType_FK", "QuotingV2_ServiceTypes")]
        public ServiceType QuotingV2_ServiceTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceType>("QuotingToolModel.QuotingV2_ServiceTypeCharges_ServiceType_FK", "QuotingV2_ServiceTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceType>("QuotingToolModel.QuotingV2_ServiceTypeCharges_ServiceType_FK", "QuotingV2_ServiceTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceType> QuotingV2_ServiceTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceType>("QuotingToolModel.QuotingV2_ServiceTypeCharges_ServiceType_FK", "QuotingV2_ServiceTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceType>("QuotingToolModel.QuotingV2_ServiceTypeCharges_ServiceType_FK", "QuotingV2_ServiceTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuotingToolModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="stateID">Initial value of the StateID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        public static State CreateState(global::System.Int32 stateID, global::System.String name, global::System.Int32 countryID, global::System.DateTime dateAdded, global::System.String addedBy)
        {
            State state = new State();
            state.StateID = stateID;
            state.Name = name;
            state.CountryID = countryID;
            state.DateAdded = dateAdded;
            state.AddedBy = addedBy;
            return state;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                if (_StateID != value)
                {
                    OnStateIDChanging(value);
                    ReportPropertyChanging("StateID");
                    _StateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateID");
                    OnStateIDChanged();
                }
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Cities_State_FK", "QuotingV2_Cities")]
        public EntityCollection<City> QuotingV2_Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("QuotingToolModel.QuotingV2_Cities_State_FK", "QuotingV2_Cities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("QuotingToolModel.QuotingV2_Cities_State_FK", "QuotingV2_Cities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_States_Country_FK", "QuotingV2_Countries")]
        public Country QuotingV2_Countries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("QuotingToolModel.QuotingV2_States_Country_FK", "QuotingV2_Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("QuotingToolModel.QuotingV2_States_Country_FK", "QuotingV2_Countries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> QuotingV2_CountriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("QuotingToolModel.QuotingV2_States_Country_FK", "QuotingV2_Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("QuotingToolModel.QuotingV2_States_Country_FK", "QuotingV2_Countries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_State_FK", "Fees")]
        public EntityCollection<Fees> QuotingV2_Fees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_State_FK", "Fees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_State_FK", "Fees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Zones_State_FK", "QuotingV2_Zones")]
        public EntityCollection<Zone> QuotingV2_Zones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Zone>("QuotingToolModel.QuotingV2_Zones_State_FK", "QuotingV2_Zones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Zone>("QuotingToolModel.QuotingV2_Zones_State_FK", "QuotingV2_Zones", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuotingToolModel", Name="Test")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Test : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Test object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Test CreateTest(global::System.Int32 id)
        {
            Test test = new Test();
            test.id = id;
            return test;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> fechadesde
        {
            get
            {
                return _fechadesde;
            }
            set
            {
                OnfechadesdeChanging(value);
                ReportPropertyChanging("fechadesde");
                _fechadesde = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fechadesde");
                OnfechadesdeChanged();
            }
        }
        private Nullable<global::System.DateTime> _fechadesde;
        partial void OnfechadesdeChanging(Nullable<global::System.DateTime> value);
        partial void OnfechadesdeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> fechahasta
        {
            get
            {
                return _fechahasta;
            }
            set
            {
                OnfechahastaChanging(value);
                ReportPropertyChanging("fechahasta");
                _fechahasta = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fechahasta");
                OnfechahastaChanged();
            }
        }
        private Nullable<global::System.DateTime> _fechahasta;
        partial void OnfechahastaChanging(Nullable<global::System.DateTime> value);
        partial void OnfechahastaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> zona
        {
            get
            {
                return _zona;
            }
            set
            {
                OnzonaChanging(value);
                ReportPropertyChanging("zona");
                _zona = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("zona");
                OnzonaChanged();
            }
        }
        private Nullable<global::System.Int32> _zona;
        partial void OnzonaChanging(Nullable<global::System.Int32> value);
        partial void OnzonaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String zonaDescripcion
        {
            get
            {
                return _zonaDescripcion;
            }
            set
            {
                OnzonaDescripcionChanging(value);
                ReportPropertyChanging("zonaDescripcion");
                _zonaDescripcion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("zonaDescripcion");
                OnzonaDescripcionChanged();
            }
        }
        private global::System.String _zonaDescripcion;
        partial void OnzonaDescripcionChanging(global::System.String value);
        partial void OnzonaDescripcionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> precio
        {
            get
            {
                return _precio;
            }
            set
            {
                OnprecioChanging(value);
                ReportPropertyChanging("precio");
                _precio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("precio");
                OnprecioChanged();
            }
        }
        private Nullable<global::System.Decimal> _precio;
        partial void OnprecioChanging(Nullable<global::System.Decimal> value);
        partial void OnprecioChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuotingToolModel", Name="UOM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UOM : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UOM object.
        /// </summary>
        /// <param name="uomID">Initial value of the UomID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        public static UOM CreateUOM(global::System.Int32 uomID, global::System.String name, global::System.DateTime dateAdded, global::System.String addedBy)
        {
            UOM uOM = new UOM();
            uOM.UomID = uomID;
            uOM.Name = name;
            uOM.DateAdded = dateAdded;
            uOM.AddedBy = addedBy;
            return uOM;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UomID
        {
            get
            {
                return _UomID;
            }
            set
            {
                if (_UomID != value)
                {
                    OnUomIDChanging(value);
                    ReportPropertyChanging("UomID");
                    _UomID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UomID");
                    OnUomIDChanged();
                }
            }
        }
        private global::System.Int32 _UomID;
        partial void OnUomIDChanging(global::System.Int32 value);
        partial void OnUomIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_RangeUom_FK", "QuotingV2_Fees")]
        public EntityCollection<Fees> QuotingV2_Fees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_RangeUom_FK", "QuotingV2_Fees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_RangeUom_FK", "QuotingV2_Fees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Fees_Uom_FK", "QuotingV2_Fees")]
        public EntityCollection<Fees> QuotingV2_Fees1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_Uom_FK", "QuotingV2_Fees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fees>("QuotingToolModel.QuotingV2_Fees_Uom_FK", "QuotingV2_Fees", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuotingToolModel", Name="ZipCodes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZipCodes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ZipCodes object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="zipCode">Initial value of the ZipCode property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        public static ZipCodes CreateZipCodes(global::System.Int32 countryID, global::System.Int32 zipCode, global::System.DateTime dateAdded, global::System.String addedBy)
        {
            ZipCodes zipCodes = new ZipCodes();
            zipCodes.CountryID = countryID;
            zipCodes.ZipCode = zipCode;
            zipCodes.DateAdded = dateAdded;
            zipCodes.AddedBy = addedBy;
            return zipCodes;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                if (_ZipCode != value)
                {
                    OnZipCodeChanging(value);
                    ReportPropertyChanging("ZipCode");
                    _ZipCode = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ZipCode");
                    OnZipCodeChanged();
                }
            }
        }
        private global::System.Int32 _ZipCode;
        partial void OnZipCodeChanging(global::System.Int32 value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_ZipCodes_Country_FK", "QuotingV2_Countries")]
        public Country QuotingV2_Countries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("QuotingToolModel.QuotingV2_ZipCodes_Country_FK", "QuotingV2_Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("QuotingToolModel.QuotingV2_ZipCodes_Country_FK", "QuotingV2_Countries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> QuotingV2_CountriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("QuotingToolModel.QuotingV2_ZipCodes_Country_FK", "QuotingV2_Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("QuotingToolModel.QuotingV2_ZipCodes_Country_FK", "QuotingV2_Countries", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuotingToolModel", Name="Zone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Zone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Zone object.
        /// </summary>
        /// <param name="zoneID">Initial value of the ZoneID property.</param>
        /// <param name="stateID">Initial value of the StateID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        public static Zone CreateZone(global::System.Int32 zoneID, global::System.Int32 stateID, global::System.String code, global::System.String name, global::System.DateTime dateAdded, global::System.String addedBy)
        {
            Zone zone = new Zone();
            zone.ZoneID = zoneID;
            zone.StateID = stateID;
            zone.Code = code;
            zone.Name = name;
            zone.DateAdded = dateAdded;
            zone.AddedBy = addedBy;
            return zone;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneID
        {
            get
            {
                return _ZoneID;
            }
            set
            {
                if (_ZoneID != value)
                {
                    OnZoneIDChanging(value);
                    ReportPropertyChanging("ZoneID");
                    _ZoneID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ZoneID");
                    OnZoneIDChanged();
                }
            }
        }
        private global::System.Int32 _ZoneID;
        partial void OnZoneIDChanging(global::System.Int32 value);
        partial void OnZoneIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IslandID
        {
            get
            {
                return _IslandID;
            }
            set
            {
                OnIslandIDChanging(value);
                ReportPropertyChanging("IslandID");
                _IslandID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IslandID");
                OnIslandIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IslandID;
        partial void OnIslandIDChanging(Nullable<global::System.Int32> value);
        partial void OnIslandIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Zones_City_FK", "QuotingV2_Cities")]
        public City QuotingV2_Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("QuotingToolModel.QuotingV2_Zones_City_FK", "QuotingV2_Cities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("QuotingToolModel.QuotingV2_Zones_City_FK", "QuotingV2_Cities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> QuotingV2_CitiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("QuotingToolModel.QuotingV2_Zones_City_FK", "QuotingV2_Cities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("QuotingToolModel.QuotingV2_Zones_City_FK", "QuotingV2_Cities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Zones_Island_FK", "QuotingV2_Islands")]
        public Island QuotingV2_Islands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Island>("QuotingToolModel.QuotingV2_Zones_Island_FK", "QuotingV2_Islands").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Island>("QuotingToolModel.QuotingV2_Zones_Island_FK", "QuotingV2_Islands").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Island> QuotingV2_IslandsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Island>("QuotingToolModel.QuotingV2_Zones_Island_FK", "QuotingV2_Islands");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Island>("QuotingToolModel.QuotingV2_Zones_Island_FK", "QuotingV2_Islands", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuotingToolModel", "QuotingV2_Zones_State_FK", "QuotingV2_States")]
        public State QuotingV2_States
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("QuotingToolModel.QuotingV2_Zones_State_FK", "QuotingV2_States").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("QuotingToolModel.QuotingV2_Zones_State_FK", "QuotingV2_States").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> QuotingV2_StatesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("QuotingToolModel.QuotingV2_Zones_State_FK", "QuotingV2_States");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("QuotingToolModel.QuotingV2_Zones_State_FK", "QuotingV2_States", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
