USE [AJCDW]
GO
/****** Object:  StoredProcedure [dbo].[CustomerYOYActuals]    Script Date: 10/24/2019 9:14:40 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[CustomerYOYActuals] AS
BEGIN TRY
BEGIN

DECLARE @ProcName VARCHAR(100) = OBJECT_NAME(@@PROCID)


/*****************************************************Begin Logging*******************************************************/

 EXEC AJCDW.dbo.spAJCDW_Logging @StepID = 1, @BeginOrEnd = 0, @ProcName = @ProcName

 /*************************************************************************************************************************/


TRUNCATE TABLE AJCDW.dbo.RptCustomerYOYActuals


IF OBJECT_ID ('TEMPDB..#AccountYear') IS NOT NULL  DROP TABLE #AccountYear
select		 YEAR(GETDATE()) Year, 1 Month
into #AccountYear 
union select YEAR(GETDATE()), 2
union select YEAR(GETDATE()), 3
union select YEAR(GETDATE()), 4
union select YEAR(GETDATE()), 5
union select YEAR(GETDATE()), 6
union select YEAR(GETDATE()), 7
union select YEAR(GETDATE()), 8
union select YEAR(GETDATE()), 9
union select YEAR(GETDATE()), 10
union select YEAR(GETDATE()), 11
union select YEAR(GETDATE()), 12
union select YEAR(GETDATE()) -1, 1
union select YEAR(GETDATE()) -1, 2
union select YEAR(GETDATE()) -1, 3
union select YEAR(GETDATE()) -1, 4
union select YEAR(GETDATE()) -1, 5
union select YEAR(GETDATE()) -1, 6
union select YEAR(GETDATE()) -1, 7
union select YEAR(GETDATE()) -1, 8
union select YEAR(GETDATE()) -1, 9
union select YEAR(GETDATE()) -1, 10
union select YEAR(GETDATE()) -1, 11
union select YEAR(GETDATE()) -1, 12
union select YEAR(GETDATE()) -2, 1
union select YEAR(GETDATE()) -2, 2
union select YEAR(GETDATE()) -2, 3
union select YEAR(GETDATE()) -2, 4
union select YEAR(GETDATE()) -2, 5
union select YEAR(GETDATE()) -2, 6
union select YEAR(GETDATE()) -2, 7
union select YEAR(GETDATE()) -2, 8
union select YEAR(GETDATE()) -2, 9
union select YEAR(GETDATE()) -2, 10
union select YEAR(GETDATE()) -2, 11
union select YEAR(GETDATE()) -2, 12


IF OBJECT_ID ('TEMPDB..#CustomerName') IS NOT NULL  DROP TABLE #CustomerName
CREATE TABLE #CustomerName (CustName VARCHAR(200), InvLOB VARCHAR(20))
INSERT INTO #CustomerName (CustName, InvLOB)
SELECT	DISTINCT LTRIM(RTRIM(InvCustName)), LTRIM(RTRIM(InvLOB))
FROM	AJCDW.dbo.tblInvoice 
WHERE	ACCTYR >= YEAR(GETDATE()) - 2
AND		InvCustName IS NOT NULL 

IF OBJECT_ID ('TEMPDB..#Customer') IS NOT NULL  DROP TABLE #Customer
select CustName, InvLOB, Year , Month 
into #Customer
from #CustomerName, #AccountYear

alter table #Customer add [CY Load Count] int, [CY -1 Load Count] int, [CY -2 Load Count] int, [CY GP] decimal(38,2), [CY -1 GP] decimal(38,2), [CY -2 GP] decimal(38,2)

IF OBJECT_ID ('TEMPDB..##Loop') IS NOT NULL  DROP TABLE ##Loop
select *, 0 Status, row_number() over (order by Year) ID
into ##Loop
from #AccountYear 


DECLARE @ID INT = (SELECT MIN(ID) FROM ##Loop)
DECLARE @YEAR INT = (SELECT YEAR FROM ##Loop WHERE ID = @ID)
DECLARE @MONTH INT = (SELECT MONTH FROM ##Loop WHERE ID = @ID)


WHILE (@ID <= (SELECT MAX(ID) FROM ##Loop))
BEGIN

BEGIN

SET @YEAR = (SELECT YEAR FROM ##Loop WHERE ID = @ID)
SET @MONTH = (SELECT MONTH FROM ##Loop WHERE ID = @ID)

UPDATE C SET [CY Load Count] = ISNULL(x.[CY Load Count],0), [CY GP] = ISNULL(x.[CY GP],0)
FROM #Customer c
LEFT OUTER JOIN (
					select ISNULL([CY Load Count],0) [CY Load Count], InvCustName CustName, InvLOB, [CY GP], COALESCE(y.ACCTYR,x.ACCTYR) ACCTYR, COALESCE(y.ACCTMONTH,x.ACCTMONTH) ACCTMONTH
					from (
							select count(*) [CY Load Count], shpLOB, LTRIM(RTRIM(tcm.CustName)) CustName, tf.ACCTYR, tf.ACCTMONTH
							from tblShipment ts
							inner join tblCustMaster tcm on tcm.CustMasterCode = ts.ShpAccnt
							inner join tblFile tf on tf.RefNo = ts.RefNo
							where  tf.ACCTYR = @YEAR --CY
							and	   tf.ACCTMONTH = @Month 
							group by shpLOB, LTRIM(RTRIM(CustName)), tf.ACCTYR, tf.ACCTMONTH
						) y
					full outer join (
										select LTRIM(RTRIM(InvCustName)) InvCustName, InvLOB, SUM(InvGP) [CY GP], ACCTYR, ACCTMONTH
										from tblInvoice 
										where ACCTYR = @Year --CY
										and ACCTMONTH = @Month 
										and InvLOB IS NOT NULL
										group by LTRIM(RTRIM(InvCustName)), InvLOB, ACCTYR, ACCTMONTH
									) x on x.InvCustName = y.CustName and y.ShpLOB = x.InvLOB and x.ACCTYR = y.ACCTYR and x.ACCTMONTH = y.ACCTMONTH
					where InvLOB IS NOT NULL 
				) x on x.CustName = c.CustName and x.ACCTYR = c.Year and x.ACCTMONTH = c.Month and c.InvLOB = x.InvLOB
WHERE  C.Year = @Year 
and	  c.Month = @Month 



END

BEGIN
UPDATE ##Loop SET STATUS = 1 WHERE ID = @ID
SET @ID = (SELECT MIN(ID) FROM ##Loop WHERE STATUS = 0)
END

END

--Set all values to 0 for CY -1 & -2 when the year value is 2 years back

update #Customer set [CY -1 Load Count] = 0, [CY -2 Load Count] = 0, [CY -1 GP] = 0, [CY -2 GP] = 0 where year = YEAR(GETDATE()) - 2

--Set all values to 0 for CY -2 when the year value is 1 year back

update #Customer set [CY -2 Load Count] = 0, [CY -2 GP] = 0 where year = YEAR(GETDATE()) - 1


--Update CY - 1 values for YEAR(GETDATE()) - 1

update c set [CY -1 Load Count] = ISNULL(x.[CY Load Count],0), [CY -1 GP] = ISNULL(x.[CY GP],0)
from #Customer c 
outer apply (
				select *
				from #Customer c1 
				where c1.CustName = c.CustName
				and c1.Year = year(getdate()) - 2
				and c1.Month = c.Month
				and isnull(c1.InvLOB,'') = isnull(c.InvLOB,'')
			) x
where c.Year = year(getdate()) - 1


--Update CY - 1 & -2 values for YEAR(GETDATE()) 
update c set [CY -1 Load Count] = ISNULL(x.[CY Load Count],0), [CY -1 GP] = ISNULL(x.[CY GP],0)
from #Customer c 
outer apply (
				select *
				from #Customer c1 
				where c1.CustName = c.CustName
				and c1.Year = year(getdate()) - 1
				and c1.Month = c.Month
				and isnull(c1.InvLOB,'') = isnull(c.InvLOB,'')
			) x
where c.Year = year(getdate()) 

update c set [CY -2 Load Count] = ISNULL(x.[CY Load Count],0), [CY -2 GP] = ISNULL(x.[CY GP],00)
from #Customer c 
outer apply (
				select *
				from #Customer c1 
				where c1.CustName = c.CustName
				and c1.Year = year(getdate()) - 2
				and c1.Month = c.Month
				and isnull(c1.InvLOB,'') = isnull(c.InvLOB,'')
			) x
where c.Year = year(getdate()) 



INSERT INTO AJCDW.dbo.RptCustomerYOYActuals ([CustName], [CY Load Count], [CY -1 Load Count], [CY -2 Load Count], [CY GP], [CY -1 GP], [CY -2 GP], [InvLOB], [ACCTYR], [ACCTMONTH])
SELECT [CustName], [CY Load Count], [CY -1 Load Count], [CY -2 Load Count], [CY GP], [CY -1 GP], [CY -2 GP], [InvLOB], [Year], [Month]
FROM #Customer c



/*****************************************************End Logging*******************************************************/

 EXEC AJCDW.dbo.spAJCDW_Logging @StepID = 1, @BeginOrEnd = 1, @RecordsProcessed = @@ROWCOUNT, @ProcName = @ProcName

 /***********************************************************************************************************************/


END

End Try



BEGIN CATCH


              DECLARE @ErrorMessage NVARCHAR(4000), @ErrorLine INT, @ErrorDate DATETIME;

              
              SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorLine = ERROR_LINE(), @ErrorDate = GETDATE();
              
              Insert into AJCDW.dbo.tblProcedureErrorLog ([ProcedureName], [ErrorMessage], [ErrorLine], [ErrorDate])
              Select '[CustomerYOYActuals]', @ErrorMessage, @ErrorLine, @ErrorDate



END CATCH
